@model IEnumerable<MyStock.ViewModels.InvoiceVM>

@{
    ViewBag.Title = "Index";
}

<body background="~/Content/Images/pattern.jpg">
</body>

<h2>Index</h2>


<p>
    @Html.ActionLink("Create New", "Create")
</p>
<button class="button" onclick="sortTable()">Sort</button>

<input type="text" id="searchInput" onkeyup="searchFunction()" placeholder="Search for invoices by number" title="Type an invoice number" />
<table class="table" id="myTable">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Number)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price) <span>(RON)</span>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Payment)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Transaction)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Partner.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Product.Name)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Number)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Quantity)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Payment)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Transaction)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Partner.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Product.Name)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.InvoiceId }) |
            @Html.ActionLink("Details", "Details", new { id=item.InvoiceId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.InvoiceId })
        </td>
    </tr>
}

</table>
<script>
    function sortTable() {
        var table, rows, switching, i, x, y, shouldSwitch;
        table = document.getElementById("myTable");
        switching = true;

        while (switching) {

            switching = false;
            rows = table.getElementsByTagName("TR");

            for (i = 1; i < (rows.length - 1); i++) {

                shouldSwitch = false;

                x = rows[i].getElementsByTagName("TD")[0];
                y = rows[i + 1].getElementsByTagName("TD")[0];

                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }
</script>
<script>

    function searchFunction() {
        var input, filter, table, tr, td, i;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");

        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

</script>
